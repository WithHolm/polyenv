name: Dev - Create changelog from PR
on:
  pull_request_target:
    branches: [dev]
    types: [opened, synchronize, reopened]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  COMMIT_REF: ${{ github.event.pull_request.head.sha }}
  BRANCH_REF: ${{ github.event.pull_request.head.ref }}
  REPO: ${{ github.event.pull_request.head.repo.full_name }}
  AUTHOR: ${{ github.event.pull_request.user.login }}
  PR_BODY: ${{ github.event.pull_request.body }}
  FRAGMENT_CONTENT: ""

jobs:
  exsisting-fragment:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.validate-fragment.outputs.exists }}
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v5
        with:
          ref: ${{ env.COMMIT_REF }}
          repository: ${{ env.REPO }}

      - name: Validate changelog fragment
        id: validate-fragment
        run: |
          # Check if the changelog fragment file exists
          if [ -f "changelog/current/${{ env.PR_NUMBER }}.md" ]; then
            echo "changelog fragment found for this PR."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "changelog fragment not found for this PR. creating!"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

  create-fragment-from-pr:
    needs: exsisting-fragment
    if: needs.exsisting-fragment.outputs.exists == 'false'
    runs-on: ubuntu-latest
    permissions:
      # Required to read PR details
      pull-requests: read
      # Required to checkout the code and push changes
      contents: write
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v5
        with:
          ref: ${{ env.BRANCH_REF }}
          repository: ${{ env.REPO }}

      - name: Extract changelog from PR body
        id: extract-changelog
        run: |
          # Use awk to extract content between "## Changes" and the next "##" heading. remove multiline comments
          # This is safer than just reading the whole body
          content=$(echo "${{ env.PR_BODY }}" | awk '/^## Changes/{flag=1; next} /^##/{flag=0} flag' | perl -0777 -pe 's/<!--.*?-->//sg' | xargs)

          if [ -n "$content" ]; then
            echo "Changelog content found:"
            echo "$content"
            
            echo "preparting folder structure"
            mkdir -p changelog/current

            echo "write changelog fragment content"
            echo "@${{env.AUTHOR}}" > "changelog/current/${{ env.PR_NUMBER }}.md"
            echo "" >> "changelog/current/${{ env.PR_NUMBER }}.md"
            echo "$content" >> "changelog/current/${{ env.PR_NUMBER }}.md"

            echo "setting output"
            echo "CONTENT_FOUND=true" >> $GITHUB_OUTPUT
          else
            echo "No changelog content found under ## Description."
            echo "CONTENT_FOUND=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changelog fragment
        id: commit-changelog
        if: steps.extract-changelog.outputs.CONTENT_FOUND == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add "changelog/current/${{ env.PR_NUMBER }}.md"
          # Check if there are any changes to commit before committing
          if ! git diff --staged --quiet; then
            git commit -m "docs(changelog): create/update fragment for PR #${PR_NUMBER}"
            git push
          else
            echo "No changes to the changelog fragment file."
          fi