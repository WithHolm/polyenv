name: Build

on: 
  push: 
    branches: 
      - dev

permissions:
  contents: write

jobs:
  build-dev:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build and release
        id: goreleaser
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: latest
          distribution: goreleaser
          args: release --clean --config .goreleaser.dev.yaml --draft --snapshot
      - name: Grab dev release version from metadata
        id: version
        run: |
          version=$(jq -r '.version' ./dist/metadata.json)
          echo "verson:$version"
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Create prelease
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Dev Release ${{ steps.create_release.outputs.version }}
          body: |
            # DEV RELEASE
            release created by github action @ ${{ github.event.head_commit.timestamp }}
            THIS IS A DEV RELEASE. DO NOT USE THIS IN PRODUCTION. or do.. i don't care
          draft: true
          prerelease: true

      - name: Upload Contents to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ steps.version.outputs.version }}
          overwrite: true
          file_glob: true