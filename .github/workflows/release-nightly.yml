name: Dev-Build

on: 
  schedule:
    #every day at midnight
    - cron: '0 0 * * *'
  # push: 
  #   branches: 
  #     - dev

permissions:
  contents: write

jobs:
  build-dev:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Build and release
        id: goreleaser
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
        with:
          version: "~> v2"
          distribution: goreleaser
          args: release --snapshot --clean --verbose
      - name: Grab dev release version from metadata
        id: version
        run: |
          version=$(jq -r '.version' ./dist/metadata.json)
          echo "verson:$version"
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: polyenv-dev
          path: dist/*
      - name: Upload Contents to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ steps.version.outputs.version }}
          release_name: Dev Release ${{ steps.version.outputs.version }}
          file_glob: true
          prerelease: true
          overwrite: true
          body: |
            # DEV RELEASE

            release created by github action @ ${{ github.event.head_commit.timestamp }}
            THIS IS A DEV RELEASE. DO NOT USE THIS IN PRODUCTION. or do.. i don't care
          make_latest: false